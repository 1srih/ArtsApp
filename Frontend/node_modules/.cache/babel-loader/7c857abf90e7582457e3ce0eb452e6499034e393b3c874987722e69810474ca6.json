{"ast":null,"code":"var _jsxFileName = \"D:\\\\ShadowArts\\\\Frontend\\\\src\\\\components\\\\Auth\\\\AuthForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AuthForm from './AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null); // Track logged-in user\n\n  // Handle user login\n  const onLogin = credentials => {\n    const {\n      email,\n      password\n    } = credentials;\n\n    // Simulate checking credentials (hardcoded for now)\n    if (email === 'user@example.com' && password === 'password123') {\n      // If login successful, set user state\n      setUser({\n        email\n      });\n      alert('Logged in successfully');\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  // Handle user signup\n  const onSignup = credentials => {\n    const {\n      email,\n      password\n    } = credentials;\n\n    // Basic validation\n    if (email && password) {\n      // Simulate user creation (save to state for now)\n      setUser({\n        email\n      });\n      alert('Account created successfully');\n    } else {\n      alert('Please provide both email and password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Arts Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n      mode: \"login\",\n      onLogin: onLogin,\n      onSignup: onSignup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Logged in as: \", user.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in or sign up.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AuthForm","jsxDEV","_jsxDEV","App","_s","user","setUser","onLogin","credentials","email","password","alert","onSignup","children","fileName","_jsxFileName","lineNumber","columnNumber","mode","_c","$RefreshReg$"],"sources":["D:/ShadowArts/Frontend/src/components/Auth/AuthForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AuthForm from './AuthForm';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null); // Track logged-in user\r\n\r\n  // Handle user login\r\n  const onLogin = (credentials) => {\r\n    const { email, password } = credentials;\r\n\r\n    // Simulate checking credentials (hardcoded for now)\r\n    if (email === 'user@example.com' && password === 'password123') {\r\n      // If login successful, set user state\r\n      setUser({ email });\r\n      alert('Logged in successfully');\r\n    } else {\r\n      alert('Invalid credentials');\r\n    }\r\n  };\r\n\r\n  // Handle user signup\r\n  const onSignup = (credentials) => {\r\n    const { email, password } = credentials;\r\n\r\n    // Basic validation\r\n    if (email && password) {\r\n      // Simulate user creation (save to state for now)\r\n      setUser({ email });\r\n      alert('Account created successfully');\r\n    } else {\r\n      alert('Please provide both email and password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Arts Project</h1>\r\n\r\n      <AuthForm mode=\"login\" onLogin={onLogin} onSignup={onSignup} />\r\n\r\n      {/* Display user status if logged in */}\r\n      {user ? (\r\n        <p>Logged in as: {user.email}</p>\r\n      ) : (\r\n        <p>Please log in or sign up.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMQ,OAAO,GAAIC,WAAW,IAAK;IAC/B,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGF,WAAW;;IAEvC;IACA,IAAIC,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,aAAa,EAAE;MAC9D;MACAJ,OAAO,CAAC;QAAEG;MAAM,CAAC,CAAC;MAClBE,KAAK,CAAC,wBAAwB,CAAC;IACjC,CAAC,MAAM;MACLA,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIJ,WAAW,IAAK;IAChC,MAAM;MAAEC,KAAK;MAAEC;IAAS,CAAC,GAAGF,WAAW;;IAEvC;IACA,IAAIC,KAAK,IAAIC,QAAQ,EAAE;MACrB;MACAJ,OAAO,CAAC;QAAEG;MAAM,CAAC,CAAC;MAClBE,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,MAAM;MACLA,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACET,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhCf,OAAA,CAACF,QAAQ;MAACkB,IAAI,EAAC,OAAO;MAACX,OAAO,EAAEA,OAAQ;MAACK,QAAQ,EAAEA;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAG9DZ,IAAI,gBACHH,OAAA;MAAAW,QAAA,GAAG,gBAAc,EAACR,IAAI,CAACI,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEjCf,OAAA;MAAAW,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CA7CID,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}