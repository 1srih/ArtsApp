{"ast":null,"code":"var _jsxFileName = \"D:\\\\ShadowArts\\\\Frontend\\\\src\\\\components\\\\Auth\\\\Authform.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = ({\n  mode,\n  onLogin,\n  onSignup\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const credentials = {\n        email,\n        password\n      };\n      if (mode === 'login') {\n        if (!onLogin) throw new Error('onLogin is not a function');\n        const success = await onLogin(credentials);\n        if (success) navigate('/');\n      } else {\n        if (!onSignup) throw new Error('onSignup is not a function');\n        const success = await onSignup(credentials);\n        if (success) navigate('/');\n      }\n    } catch (err) {\n      setError(err.message || 'Something went wrong');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: mode === 'login' ? 'Sign In' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: mode === 'login' ? 'Sign In' : 'Sign Up'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"rNbKS0tJ9+6pXHDl9GsrDWjEYSE=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","AuthForm","mode","onLogin","onSignup","_s","navigate","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","credentials","Error","success","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/ShadowArts/Frontend/src/components/Auth/Authform.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthForm = ({ mode, onLogin, onSignup }) => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const credentials = { email, password };\r\n\r\n      if (mode === 'login') {\r\n        if (!onLogin) throw new Error('onLogin is not a function');\r\n        const success = await onLogin(credentials);\r\n        if (success) navigate('/');\r\n      } else {\r\n        if (!onSignup) throw new Error('onSignup is not a function');\r\n        const success = await onSignup(credentials);\r\n        if (success) navigate('/');\r\n      }\r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h2>{mode === 'login' ? 'Sign In' : 'Sign Up'}</h2>\r\n      {error && <div className=\"error\">{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        /><br />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        /><br />\r\n        <button type=\"submit\">\r\n          {mode === 'login' ? 'Sign In' : 'Sign Up'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}